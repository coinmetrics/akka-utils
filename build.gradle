buildscript {
    ext {
        akka_version = "2.6.4"
        akka_http_version = "10.1.11"
    }
}

plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'maven-publish'
}

group 'io.coinmetrics'
version '1.0.4'

repositories {
    jcenter()
    mavenCentral()
}

sourceSets {
    main {
        kotlin {
            srcDir 'src/main/kotlin'
        }
        resources {
            srcDirs = ['src/main/resources', 'resources']
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = '11'
}
compileTestKotlin {
    kotlinOptions.jvmTarget = '11'
}


dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // akka
    implementation "com.typesafe.akka:akka-stream_2.13:$akka_version"
    implementation "com.typesafe.akka:akka-http_2.13:$akka_http_version"
    implementation "com.typesafe.akka:akka-http-jackson_2.13:$akka_http_version"

    // test
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.+'
}


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


task sourceJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.kotlin
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

tasks.withType(Jar) {
    archivesBaseName = "akka-utils"
}

publishing {

    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId "io.coinmetrics"
            artifactId "akka-utils"
            version version
            pom {
                name = 'Kotlin Akka Library'
                description = 'Useful utility classes'
            }
            artifact sourceJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }

    repositories {
        maven {
            url "https://gitlab.com/api/v4/projects/16995897/packages/maven"
            credentials(HttpHeaderCredentials) {
                if (System.env["CI_JOB_TOKEN"] != null) {
                    name = "Job-Token"
                    value = System.env["CI_JOB_TOKEN"]
                } else {
                    name = "Private-Token"
                    value = gitlabPersonalAccessToken
                }
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }

}


